// OVERRIDE Bulkrax 3.5.1 to override handleParserKlass method from importer.js

function handleParserKlass() {
  <% Bulkrax.parsers.map{ |p| p[:partial]}.uniq.each do |partial| %>
  if($('.<%= partial %>').length > 0) {
    window.<%= partial %> = $('.<%= partial %>').detach()
  }
  <% end %>

  var parser_klass = $("#importer_parser_klass option:selected")
  if(parser_klass.length > 0 && parser_klass.data('partial') && parser_klass.data('partial').length > 0) {
    $('.parser_fields').append(window[parser_klass.data('partial')])
    $('.parser_fields').trigger('parser_fields_added', [parser_klass.val()])
  }

  var file_path_value = $('#importer_parser_fields_import_file_path').val()
  handleFileToggle(file_path_value)
}

function handleBrowseEverything(){
  var button = $("button[data-key='browse_everything']")
  if(button.length == 0){return;}
    button.browseEverything({
      route: button.data('route'),
      target: button.data('target')
    }).done(function(data) {
      $('.ev-browser.show').removeClass('show')
        if($('#fileupload').length > 0){
          var evt = { isDefaultPrevented: function() { return false; } };
          var files = $.map(data, function(d) { return { name: d.file_name, size: d.file_size, id: d.url } });
          $.blueimp.fileupload.prototype.options.done.call($('#fileupload').fileupload(), evt, { result: { files: files }});
        }
      // User has submitted files; data contains an array of URLs and their options
    }).cancel(function() {
      $('.ev-browser.show').removeClass('show')
      // User cancelled the browse operation
    }).fail(function(status, error, text) {
      $('.ev-browser.show').removeClass('show')
      // URL retrieval experienced a technical failure
    });
}
$(document).on('parser_fields_added', function(e, parser_klass) {
  if(parser_klass === "Bulkrax::CsvParser"){
    handleBrowseEverything();
  }
});