name: "Deploy"
on:
  workflow_dispatch:
    inputs:
      environment:
        description: 'Deploy to Environment'
        require: true
        default: 'staging'
        type: choice
        options:
          - staging
          - demo
          - production
        
env:
  REGISTRY: ghcr.io

jobs:
  deployment:
    runs-on: 'ubuntu-latest'
    container: dtzar/helm-kubectl:3.9.4
    env:
      DEPLOY_IMAGE: ghcr.io/${{ github.repository }}
      WORKER_IMAGE: ghcr.io/${{ github.repository }}/worker
      HELM_EXPERIMENTAL_OCI: 1
      HELM_RELEASE_NAME: utk-hyku-${{ inputs.environment }}
      KUBE_NAMESPACE: utk-hyku-${{ inputs.environment }}
      HELM_EXTRA_ARGS: >
        --values ops/${{ inputs.environment }}-deploy.yaml
      KUBECONFIG_FILE: ${{ secrets.${{ inputs.environment }}_KUBECONFIG_FILE }}
      KUBECONFIG: ./kubeconfig.yml
      SOLR_ADMIN_PASSWORD: ${{ secrets.${{ inputs.environment }}_SOLR_ADMIN_PASSWORD }}
      DB_PASSWORD: ${{ secrets.${{ inputs.environment }}_DB_PASSWORD }}
      SMTP_PASSWORD: ${{ secrets.SMTP_PASSWORD }}
    steps:
      - name: Set env
        run: >-
          echo "TAG=${GITHUB_SHA::8}" >> $GITHUB_ENV;
          echo "DEPLOY_TAG=${GITHUB_SHA::8}" >> $GITHUB_ENV;
      - name: Checkout code
        uses: actions/checkout@v3
      - name: Do deploy
        run: >-
          echo $KUBECONFIG_FILE | base64 -d > $KUBECONFIG;
          DOLLAR=$ envsubst < ops/${{ inputs.environment }}-deploy.tmpl.yaml > ops/${{ inputs.environment }}-deploy.yaml;
          cat ops/${{ inputs.environment }}-deploy.yaml;
          ./bin/helm_deploy utk-${{ inputs.environment }} utk-${{ inputs.environment }}
